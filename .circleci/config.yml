version: 2.1

jobs:
  build:
    # image to run test from
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout  # copy the project into image
      - run: mvn test

      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test

      - store_artifacts:
          path: target/site/jacoco/jacoco.xml
          destination: /tmp/artifacts

      - store_artifacts:
          path: target/site/badges/checkstyle-result.svg
          destination: /tmp/artifacts

      - store_artifacts:
          path: target/checkstyle-result.xml
          destination: /tmp/artifacts

      - run:
        name: javadoc
        command: mvn javadoc:javadoc


      - add_ssh_keys:
          fingerprints:
            - "01:76:67:56:8a:ac:ef:e8:5b:b5:94:f9:de:ce:9e:1e"

      - codecov/upload

      - run:
        name: deploy
        command: |
          git config --global user.name "lahcene-belhadi"
          git config --global user.email "lahcene-belhadi@alumni.univ-avignon.fr"
          git clone --branch=gh-pages --depth=1 git@github.com:lahcene-belhadi/ceri-m1-techniques-de-test.git gh-pages
          rm -rf gh-pages/*
          cp -R target/site/apidocs/* gh-pages/
          cd gh-pages
          git add .
          git commit -m "Updates JavaDoc"
          git push origin gh-pages
    

      - run:
          name: site
          command: mvn site

      - run:
          name: post-site
          command: mvn post-site

      - run:
          name: Upload coverage data to Codecov
          command: bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}

      - run:
          name: Code Coverage
          command: curl -Os https://uploader.codecov.io/latest/linux/codecov; chmod +x codecov; ./codecov

workflows:
  version: 2.1
  # only run the master branch
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
